{"version":3,"file":"static/js/837.a472c8ef.chunk.js","mappings":"8NAEAA,EAAAA,EAAAA,SAAAA,QAAyB,8CAElB,I,cAAMC,EAAU,mCAAG,oGACDD,EAAAA,EAAAA,IAAA,UADC,cAClBE,EADkB,yBAEjBA,EAASC,MAFQ,2CAAH,qDAKVC,EAAW,mCAAG,WAAOC,EAAIC,GAAX,uFACFN,EAAAA,EAAAA,IAAA,iBAAoBK,GAAMC,GADxB,cACnBJ,EADmB,yBAElBA,EAASC,MAFS,2CAAH,wD,kBCPXI,EAAKC,EAAAA,EAAAA,GAAH,4EAMFC,EAASD,EAAAA,EAAAA,GAAH,gVAiBNE,EAAWF,EAAAA,EAAAA,IAAH,oPAURG,EAASH,EAAAA,EAAAA,OAAH,iMAUNI,EAAUJ,EAAAA,EAAAA,IAAH,sBAEPK,EAAaL,EAAAA,EAAAA,IAAH,sBAEVM,EAAaN,EAAAA,EAAAA,IAAH,6F,kEC+BvB,EAnEe,WACb,OAAwBO,EAAAA,EAAAA,UAAS,IAAjC,eAAOZ,EAAP,KAAaa,EAAb,KACA,GAAwBD,EAAAA,EAAAA,UAAS,GAAjC,eAAOE,EAAP,KAAaC,EAAb,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,6GAEQnB,IAFR,OAERoB,EAFQ,OAGdL,GAAQ,OAAIK,IAHE,uGAAH,qDAMfD,GACD,GAAE,IAGH,IAYME,EAASnB,EAAKoB,MAAM,EAZH,EAYuBN,GACxCO,EAbiB,EAaiBP,GAAQd,EAAKsB,OAMrD,OACE,4BACE,SAAClB,EAAD,UACGe,EAAOI,KAAI,YAA8C,IAA3CrB,EAA0C,EAA1CA,GAAIsB,EAAsC,EAAtCA,OAAQL,EAA8B,EAA9BA,OAAQM,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UACvC,OACE,SAACpB,EAAD,WACE,4BACE,SAACI,EAAD,WACE,0BACE,SAACD,EAAD,CAASkB,IAAKC,EAAKC,IAAI,cAG3B,SAACtB,EAAD,CAAUoB,IAAKH,EAAQK,IAAKJ,KAC5B,UAACd,EAAD,YACE,yBAAIQ,EAAJ,cACA,yBAAIO,EAAJ,oBAEF,SAAClB,EAAD,CACEsB,QAAS,YApCD,SAAA5B,GACtB,IAAMC,EAASH,EAAK+B,MAAK,SAAAC,GAAE,OAAIA,EAAG9B,KAAOA,CAAd,IAErB+B,EAAS9B,EAAOuB,UACtBvB,EAAOuB,UAAYO,EAAS,EAExB9B,IACF+B,QAAQC,IAAIhC,GACZF,EAAYC,EAAIC,GAEnB,CA2BiBiC,CAAgBlC,EACjB,EAHH,wBAZSA,EAsBhB,OAEDmB,IAAkB,mBAAQS,QAlCT,WACrBf,GAAQ,SAAAsB,GAAS,OAAIA,EAAY,CAAhB,GAClB,EAgCuB,yBAGzB,C","sources":["Components/Api/Api.jsx","Components/Pages/Tweets/Tweets.styled.js","Components/Pages/Tweets/Tweets.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://64450bb0b80f57f581aff67e.mockapi.io';\n\nexport const fetchUsers = async () => {\n  const response = await axios.get(`/users`);\n  return response.data;\n};\n\nexport const addFolowers = async (id, updObj) => {\n  const response = await axios.put(`/users/${id}`, updObj);\n  return response.data;\n};\n","import styled from '@emotion/styled';\n\nexport const Ul = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 48px;\n`;\n\nexport const CardLi = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 380px;\n  height: 460px;\n\n  background: linear-gradient(\n    114.99deg,\n    #471ca9 -0.99%,\n    #5736a3 54.28%,\n    #4b2a99 78.99%\n  );\n  box-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\n  border-radius: 20px;\n`;\n\nexport const PhotoImg = styled.img`\n  width: 62px;\n  border-radius: 50%;\n\n  border: 9px solid #ebd8ff;\n  box-shadow: 0px 4.39163px 4.39163px rgba(0, 0, 0, 0.06),\n    inset 0px -2.19582px 4.39163px #ae7be3,\n    inset 0px 4.39163px 3.29372px #fbf8ff;\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  width: 196px;\n  height: 50px;\n\n  background: #ebd8ff;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border-radius: 10.3108px;\n`;\n\nexport const BgPhoto = styled.img``;\n\nexport const BgPhotoDiv = styled.div``;\n\nexport const ContentDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n","import { useState, useEffect } from 'react';\nimport { fetchUsers, addFolowers } from '../../Api/Api';\nimport {\n  CardLi,\n  Ul,\n  PhotoImg,\n  Button,\n  BgPhoto,\n  BgPhotoDiv,\n  ContentDiv,\n} from './Tweets.styled';\nimport img from '../../img/picture2 1.png';\n\nconst Tweets = () => {\n  const [data, setData] = useState([]);\n  const [page, setPage] = useState(1);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const results = await fetchUsers();\n        setData([...results]);\n      } catch {}\n    };\n    fetchData();\n  }, []);\n\n  /// пагинация\n  const ITEMS_PER_PAGE = 3;\n  const updateSubscribe = id => {\n    const updObj = data.find(el => el.id === id);\n\n    const number = updObj.followers;\n    updObj.followers = number + 1;\n\n    if (updObj) {\n      console.log(updObj);\n      addFolowers(id, updObj);\n    }\n  };\n  const tweets = data.slice(0, ITEMS_PER_PAGE * page);\n  const isButtonHidden = ITEMS_PER_PAGE * page >= data.length;\n  const handleLoadMore = () => {\n    setPage(prevState => prevState + 1);\n  };\n  ///\n\n  return (\n    <div>\n      <Ul>\n        {tweets.map(({ id, avatar, tweets, user, followers }) => {\n          return (\n            <CardLi key={id}>\n              <div>\n                <BgPhotoDiv>\n                  <div>\n                    <BgPhoto src={img} alt=\"logo\" />\n                  </div>\n                </BgPhotoDiv>\n                <PhotoImg src={avatar} alt={user} />\n                <ContentDiv>\n                  <p>{tweets} TWEETS</p>\n                  <p>{followers} FOLLOWERS</p>\n                </ContentDiv>\n                <Button\n                  onClick={() => {\n                    updateSubscribe(id);\n                  }}\n                >\n                  FOLLOW\n                </Button>\n              </div>\n            </CardLi>\n          );\n        })}\n      </Ul>\n      {!isButtonHidden && <button onClick={handleLoadMore}>Load More</button>}\n    </div>\n  );\n};\nexport default Tweets;\n"],"names":["axios","fetchUsers","response","data","addFolowers","id","updObj","Ul","styled","CardLi","PhotoImg","Button","BgPhoto","BgPhotoDiv","ContentDiv","useState","setData","page","setPage","useEffect","fetchData","results","tweets","slice","isButtonHidden","length","map","avatar","user","followers","src","img","alt","onClick","find","el","number","console","log","updateSubscribe","prevState"],"sourceRoot":""}